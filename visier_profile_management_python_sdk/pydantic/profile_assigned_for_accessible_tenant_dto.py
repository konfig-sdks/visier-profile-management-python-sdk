# coding: utf-8

"""
    Visier Profile Management APIs

    Visier APIs for managing the profiles assigned to users

    The version of the OpenAPI document: 22222222.99201.1200
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel


class ProfileAssignedForAccessibleTenantDTO(BaseModel):
    # The unique identifier associated with the profile.
    profile_id: typing.Optional[str] = Field(None, alias='profileId')

    # An identifiable profile name to display in Visier such as \"Partner Service Manager\".
    display_name: typing.Optional[str] = Field(None, alias='displayName')

    # The tenant code of the analytic tenant on which this profile is assigned.
    tenant_code: typing.Optional[str] = Field(None, alias='tenantCode')

    # If true, the profile is assigned for all the analytic tenants of the administrating tenant.
    for_all_children: typing.Optional[bool] = Field(None, alias='forAllChildren')

    # An inclusive date-time when this profile is active.   Note: Long.Min_Value means that startTime is undefined.
    validity_start_time: typing.Optional[str] = Field(None, alias='validityStartTime')

    # An exclusive date-time when this profile is no longer active.   Note: Long.Max_Value means that endTime is undefined and is equivalent to permanent access.
    validity_end_time: typing.Optional[str] = Field(None, alias='validityEndTime')
    class Config:
        arbitrary_types_allowed = True
